@inherits LayoutComponentBase
@inject StatusMessageService StatusMessageService

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <div title="@StatusMessageService.StatusMessage" class="info-box ">
                <span></span>
                <p class="d-none d-lg-block"><b>Estatus:</b></p>
                <p class="marquee">
                <p class="">@StatusMessageService.StatusMessage</p>
                </p>
            </div>
            <div class="info-box">
                <span></span>
                <p title="Conexiones Activas" class="d-none d-lg-block"><b>C. Activas:</b></p>@conexiones.Count
            </div>
            <div class="info-box">
                <span></span>
                <p class="d-none d-lg-block"><b>Recibidos:</b></p>@mRecibidos
            </div>
            <div class="info-box">
                <span></span>
                <p class="d-none d-lg-block"><b>Enviados:</b></p>@mEnviados
            </div>
            <div class="info-box">
                <span></span>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
        <TablaComponent></TablaComponent>
    </main>
    <footer>
        Andros©®™|Derechos e izquierdos Reservados o algo asi era
    </footer>
</div>
@code {

    public List<Conexiones> conexiones { get; set; } = new List<Conexiones>();
    public int mRecibidos { get; set; } = 0;
    public int mEnviados { get; set; } = 0;
    protected override void OnInitialized()
    {
        StatusMessageService.StatusMessage = "Aplicacion Iniciada";
        StatusMessageService.StatusMessageChanged += StateHasChanged;
    }

    public void Dispose()
    {
        StatusMessageService.StatusMessageChanged -= StateHasChanged;
    }
}
